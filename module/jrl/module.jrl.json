{
  "__data_type": "JRL ",
  "Categories": {
    "type": "list",
    "value": [
      {
        "__struct_id": 0,
        "Comment": {
          "type": "cexostring",
          "value": ""
        },
        "EntryList": {
          "type": "list",
          "value": [
            {
              "__struct_id": 0,
              "End": {
                "type": "word",
                "value": 1
              },
              "ID": {
                "type": "dword",
                "value": 1
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "<CUSTOM103>Emotes<CUSTOM100>\nThese are the emotes you can use via chat. They can be typed into any chat channel (party, talk, shout, etc.) and have the same effect in all of them. They are case insensitive. Most emotes also have a two-letter shortcut which may be used instead, in parentheses to the right of the emote.\n<CUSTOM103>*agree <CUSTOM100>(<CUSTOM103>*ag<CUSTOM100>)\n<CUSTOM103>*bark <CUSTOM100>(<CUSTOM103>*bk<CUSTOM100>)\n<CUSTOM103>*beg <CUSTOM100>(<CUSTOM103>*bg<CUSTOM100>)\n<CUSTOM103>*belch <CUSTOM100>(<CUSTOM103>*bh<CUSTOM100>) <CUSTOM100>(male only<CUSTOM100>)\n<CUSTOM103>*bend <CUSTOM100>(<CUSTOM103>*bn<CUSTOM100>)\n<CUSTOM103>*bored <CUSTOM100>(<CUSTOM103>*bo<CUSTOM100>)\n<CUSTOM103>*bow <CUSTOM100>(<CUSTOM103>*bw<CUSTOM100>)\n<CUSTOM103>*burp <CUSTOM100>(<CUSTOM103>*bp<CUSTOM100>) <CUSTOM100>(male only<CUSTOM100>)\n<CUSTOM103>*bye\n<CUSTOM103>*cantrip <CUSTOM100>(<CUSTOM103>*ca<CUSTOM100>)\n<CUSTOM103>*cast <CUSTOM100>(<CUSTOM103>*cs<CUSTOM100>)\n<CUSTOM103>*celebrate <CUSTOM100>(<CUSTOM103>*cl<CUSTOM100>)\n<CUSTOM103>*chat <CUSTOM100>(<CUSTOM103>*ct<CUSTOM100>)\n<CUSTOM103>*chant <CUSTOM100>(<CUSTOM103>*cn<CUSTOM100>)\n<CUSTOM103>*cheer <CUSTOM100>(<CUSTOM103>*ch<CUSTOM100>)\n<CUSTOM103>*choke\n<CUSTOM103>*chortle <CUSTOM100>(<CUSTOM103>*cr<CUSTOM100>)\n<CUSTOM103>*chuckle <CUSTOM100>(<CUSTOM103>*ck<CUSTOM100>)\n<CUSTOM103>*collapse <CUSTOM100>(<CUSTOM103>*co<CUSTOM100>)\n<CUSTOM103>*cough <CUSTOM100>(<CUSTOM103>*cg<CUSTOM100>)\n<CUSTOM103>*cry\n<CUSTOM103>*curtsy <CUSTOM100>(<CUSTOM103>*cy<CUSTOM100>)\n<CUSTOM103>*dance <CUSTOM100>(<CUSTOM103>*da<CUSTOM100>)\n<CUSTOM103>*dead <CUSTOM100>(<CUSTOM103>*dd<CUSTOM100>)\n<CUSTOM103>*demand <CUSTOM100>(<CUSTOM103>*dm<CUSTOM100>)\n<CUSTOM103>*die <CUSTOM100>(<CUSTOM103>*di<CUSTOM100>)\n<CUSTOM103>*dodge <CUSTOM100>(<CUSTOM103>*dg<CUSTOM100>)\n<CUSTOM103>*drink <CUSTOM100>(<CUSTOM103>*dr<CUSTOM100>)\n<CUSTOM103>*drunk <CUSTOM100>(<CUSTOM103>*dn<CUSTOM100>)\n<CUSTOM103>*duck <CUSTOM100>(<CUSTOM103>*dk<CUSTOM100>)\n<CUSTOM103>*exhausted <CUSTOM100>(<CUSTOM103>*ex<CUSTOM100>)\n<CUSTOM103>*fall <CUSTOM100>(<CUSTOM103>*fl<CUSTOM100>)\n<CUSTOM103>*fatigue <CUSTOM100>(<CUSTOM103>*fa<CUSTOM100>)\n<CUSTOM103>*fiddle <CUSTOM100>(<CUSTOM103>*fi<CUSTOM100>)\n<CUSTOM103>*fidget <CUSTOM100>(<CUSTOM103>*fg<CUSTOM100>)\n<CUSTOM103>*flop <CUSTOM100>(<CUSTOM103>*fp<CUSTOM100>)\n<CUSTOM103>*giggle <CUSTOM100>(<CUSTOM103>*gi<CUSTOM100>) <CUSTOM100>(female only<CUSTOM100>)\n<CUSTOM103>*goodbye <CUSTOM100>(<CUSTOM103>*gb<CUSTOM100>)\n<CUSTOM103>*goodnight <CUSTOM100>(<CUSTOM103>*gt<CUSTOM100>)\n<CUSTOM103>*greet <CUSTOM100>(<CUSTOM103>*gr<CUSTOM100>)\n<CUSTOM103>*groan <CUSTOM100>(<CUSTOM103>*gn<CUSTOM100>)\n<CUSTOM103>*guffaw <CUSTOM100>(<CUSTOM103>*gw<CUSTOM100>)\n<CUSTOM103>*hello <CUSTOM100>(<CUSTOM103>*hl<CUSTOM100>)\n<CUSTOM103>*hiccup <CUSTOM100>(<CUSTOM103>*hp<CUSTOM100>) <CUSTOM100>(male only<CUSTOM100>)\n<CUSTOM103>*hooray <CUSTOM100>(<CUSTOM103>*hy<CUSTOM100>)\n<CUSTOM103>*hoot <CUSTOM100>(<CUSTOM103>*ht<CUSTOM100>)\n<CUSTOM103>*howl <CUSTOM100>(<CUSTOM103>*hw<CUSTOM100>)\n<CUSTOM103>*hum <CUSTOM100>(<CUSTOM103>*hm<CUSTOM100>)\n<CUSTOM103>*kneel <CUSTOM100>(<CUSTOM103>*kn<CUSTOM100>)\n<CUSTOM103>*laugh <CUSTOM100>(<CUSTOM103>*la<CUSTOM100>)\n<CUSTOM103>*lie\n<CUSTOM103>*look <CUSTOM100>(<CUSTOM103>*lk<CUSTOM100>)\n<CUSTOM103>*meditate <CUSTOM100>(<CUSTOM103>*md<CUSTOM100>)\n<CUSTOM103>*meow <CUSTOM100>(<CUSTOM103>*mw<CUSTOM100>)\n<CUSTOM103>*moan <CUSTOM100>(<CUSTOM103>*mn<CUSTOM100>)\n<CUSTOM103>*mock <CUSTOM100>(<CUSTOM103>*mk<CUSTOM100>)\n<CUSTOM103>*moo <CUSTOM100>(<CUSTOM103>*mo<CUSTOM100>)\n<CUSTOM103>*nap <CUSTOM100>(<CUSTOM103>*np<CUSTOM100>)\n<CUSTOM103>*no\n<CUSTOM103>*nod <CUSTOM100>(<CUSTOM103>*nd<CUSTOM100>)\n<CUSTOM103>*nope\n<CUSTOM103>*ouch <CUSTOM100>(<CUSTOM103>*ow<CUSTOM100>)\n<CUSTOM103>*peer <CUSTOM100>(<CUSTOM103>*pe<CUSTOM100>)\n<CUSTOM103>*plead <CUSTOM100>(<CUSTOM103>*pl<CUSTOM100>)\n<CUSTOM103>*pray <CUSTOM100>(<CUSTOM103>*pr<CUSTOM100>)\n<CUSTOM103>*prone <CUSTOM100>(<CUSTOM103>*pn<CUSTOM100>)\n<CUSTOM103>*puke <CUSTOM100>(<CUSTOM103>*pu<CUSTOM100>)\n<CUSTOM103>*read <CUSTOM100>(<CUSTOM103>*re<CUSTOM100>)\n<CUSTOM103>*rest <CUSTOM100>(<CUSTOM103>*rt<CUSTOM100>)\n<CUSTOM103>*roar <CUSTOM100>(<CUSTOM103>*rr<CUSTOM100>)\n<CUSTOM103>*salute <CUSTOM100>(<CUSTOM103>*sa<CUSTOM100>)\n<CUSTOM103>*scan <CUSTOM100>(<CUSTOM103>*sn<CUSTOM100>)\n<CUSTOM103>*scratch <CUSTOM100>(<CUSTOM103>*sc<CUSTOM100>)\n<CUSTOM103>*scream <CUSTOM100>(<CUSTOM103>*sm<CUSTOM100>)\n<CUSTOM103>*screech\n<CUSTOM103>*shift <CUSTOM100>(<CUSTOM103>*sh<CUSTOM100>)\n<CUSTOM103>*sing <CUSTOM100>(<CUSTOM103>*sg<CUSTOM100>)\n<CUSTOM103>*sip\n<CUSTOM103>*sit <CUSTOM100>(<CUSTOM103>*si<CUSTOM100>)\n<CUSTOM103>*sleep <CUSTOM100>(<CUSTOM103>*sl<CUSTOM100>)\n<CUSTOM103>*smoke <CUSTOM100>(<CUSTOM103>*sk<CUSTOM100>)\n<CUSTOM103>*snarl\n<CUSTOM103>*sneeze <CUSTOM100>(<CUSTOM103>*sz<CUSTOM100>)\n<CUSTOM103>*snore\n<CUSTOM103>*sob <CUSTOM100>(<CUSTOM103>*sb<CUSTOM100>)\n<CUSTOM103>*spasm <CUSTOM100>(<CUSTOM103>*sp<CUSTOM100>)\n<CUSTOM103>*spit <CUSTOM100>(male only<CUSTOM100>)\n<CUSTOM103>*steal <CUSTOM100>(<CUSTOM103>*st<CUSTOM100>)\n<CUSTOM103>*stoop <CUSTOM100>(<CUSTOM103>*so<CUSTOM100>)\n<CUSTOM103>*stretch <CUSTOM100>(<CUSTOM103>*sr<CUSTOM100>)\n<CUSTOM103>*sway <CUSTOM100>(<CUSTOM103>*sy<CUSTOM100>)\n<CUSTOM103>*swipe <CUSTOM100>(<CUSTOM103>*sw<CUSTOM100>)\n<CUSTOM103>*talk <CUSTOM100>(<CUSTOM103>*tl<CUSTOM100>)\n<CUSTOM103>*taunt <CUSTOM100>(<CUSTOM103>*ta<CUSTOM100>)\n<CUSTOM103>*threaten <CUSTOM100>(<CUSTOM103>*th<CUSTOM100>)\n<CUSTOM103>*tired <CUSTOM100>(<CUSTOM103>*ti<CUSTOM100>)\n<CUSTOM103>*toast <CUSTOM100>(<CUSTOM103>*tt<CUSTOM100>) <CUSTOM100>(male only<CUSTOM100>)\n<CUSTOM103>*trip <CUSTOM100>(<CUSTOM103>*tp<CUSTOM100>)\n<CUSTOM103>*vomit <CUSTOM100>(<CUSTOM103>*vm<CUSTOM100>)\n<CUSTOM103>*wail <CUSTOM100>(<CUSTOM103>*wl<CUSTOM100>)\n<CUSTOM103>*wave <CUSTOM100>(<CUSTOM103>*wa<CUSTOM100>)\n<CUSTOM103>*weep <CUSTOM100>(<CUSTOM103>*wp<CUSTOM100>)\n<CUSTOM103>*whistle <CUSTOM100>(<CUSTOM103>*wh<CUSTOM100>)\n<CUSTOM103>*woozy <CUSTOM100>(<CUSTOM103>*wz<CUSTOM100>)\n<CUSTOM103>*worship <CUSTOM100>(<CUSTOM103>*wo<CUSTOM100>)\n<CUSTOM103>*yawn <CUSTOM100>(<CUSTOM103>*yw<CUSTOM100>)\n\n<CUSTOM103>Commands\n<CUSTOM103>These are the commands you can use via chat. They can be typed into any chat channel (party, talk, shout, etc.) and have the same effect in all of them. They are case insensitive.\n<CUSTOM102>Commands shown in green must either be sent via tell or targeted with the command targeter. You will be prompted to use the command targeter if you do not target via tell.\n<CUSTOM103>!d4 <CUSTOM100>= Rolls a d4.\n<CUSTOM103>!d6 <CUSTOM100>= Rolls a d6.\n<CUSTOM103>!d8 <CUSTOM100>= Rolls a d8.\n<CUSTOM103>!d10 <CUSTOM100>= Rolls a d10.\n<CUSTOM103>!d12 <CUSTOM100>= Rolls a d12.\n<CUSTOM103>!d20 <CUSTOM100>= Rolls a d20.\n<CUSTOM103>!d100 <CUSTOM100>= Rolls a d100.\n<CUSTOM103>!partyroll <CUSTOM100>= Does an arranged party loot split roll, if the command giver is the party leader.\n<CUSTOM103>!skillcheck <CUSTOM100>= Allows players to roll checks against a specific skill and DC. The command format is <c×{þ>!skillcheck (skill#) (DC#)<CUSTOM100> . Example: A DC 20 Discipline Check would be spoken as follows: <c×{þ>!skillcheck 3 20<CUSTOM100> . The result will be displayed in floating text above the player. A list of skill numbers can be called up using the <c×{þ>!skillslist<CUSTOM100> command.\n<CUSTOM103>!Skillslist <CUSTOM100>= Sends a list of the skills and matching skill numbers to the players combat log, for easy reference when using the <c×{þ>!skillcheck<CUSTOM100> command to do skill checks.\n<CUSTOM103>!wpnone <CUSTOM100>= Removes weapon visual.\n<CUSTOM103>!list emotes <CUSTOM100>= Lists the useable chat emotes.\n<CUSTOM103>!list commands <CUSTOM100>= Lists the useable chat commands.\n<CUSTOM103>!list ignored <CUSTOM100>= Lists the players you have chosen to ignore.\n<CUSTOM102>!ignore <CUSTOM100>(must be targeted by tell or command targeter) = You will not receive tells from the player you send this command to.\n<CUSTOM102>!unignore <CUSTOM100>(must be targeted by tell or command targeter) = Removes ignore status.\n\n<CUSTOM103>Chat Metachannels\n<CUSTOM103>!metaaccept <CUSTOM100>= Accepts an invitation to a metachannel.\n<CUSTOM103>!metadecline <CUSTOM100>= Declines an invitation to a metachannel.\n<CUSTOM103>!metadisband <CUSTOM100>= Removes every member of the metachannel. Only the leader of the metachannel can disband it.\n<CUSTOM102>!metainvite <CUSTOM100>(must be targeted by tell or command targeter) = Invites the target of the tell to your current metachannel. If you are not in a meta chanel, a new channel will be created if that person accepts.\n<CUSTOM102>!metakick <CUSTOM100>(must be targeted by tell or command targeter) = Kicks the target of the tell from your metachannel. Only the leader of the metachannel can kick people from it.\n<CUSTOM103>!metaleave <CUSTOM100>= Removes you from your current metachannel.\n<CUSTOM103>!metalist <CUSTOM100>= Lists the people in your metachannel.\n<CUSTOM103>/m <CUSTOM100>= Sends the text entered after the channel designation to the player's metachannel.\n"
                }
              }
            }
          ]
        },
        "Name": {
          "type": "cexolocstring",
          "value": {
            "0": "<CUSTOM104>Chat Commands<CUSTOM100>"
          }
        },
        "Picture": {
          "type": "word",
          "value": 65535
        },
        "Priority": {
          "type": "dword",
          "value": 4
        },
        "Tag": {
          "type": "cexostring",
          "value": "Chat Commands"
        },
        "XP": {
          "type": "dword",
          "value": 0
        }
      },
      {
        "__struct_id": 1,
        "Comment": {
          "type": "cexostring",
          "value": ""
        },
        "EntryList": {
          "type": "list",
          "value": [
            {
              "__struct_id": 0,
              "End": {
                "type": "word",
                "value": 1
              },
              "ID": {
                "type": "dword",
                "value": 1
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "<CUSTOM103>Emotes<CUSTOM100>\nType ! before each command.\n\n!oocarea\n!crawl"
                }
              }
            }
          ]
        },
        "Name": {
          "type": "cexolocstring",
          "value": {
            "0": "<CUSTOM104>Chat Commands<CUSTOM100>"
          }
        },
        "Picture": {
          "type": "word",
          "value": 65535
        },
        "Priority": {
          "type": "dword",
          "value": 0
        },
        "Tag": {
          "type": "cexostring",
          "value": "chat"
        },
        "XP": {
          "type": "dword",
          "value": 0
        }
      },
      {
        "__struct_id": 2,
        "Comment": {
          "type": "cexostring",
          "value": ""
        },
        "EntryList": {
          "type": "list",
          "value": [
            {
              "__struct_id": 0,
              "End": {
                "type": "word",
                "value": 1
              },
              "ID": {
                "type": "dword",
                "value": 1
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "<CUSTOM104>These are the various rules that will be updated with every reset of the server, to include the latest and newest additions.<CUSTOM100>\n\n<CUSTOM104>1)<CUSTOM100> Pickpocketing of other players is not allowed. However, you may pickpocket NPCs, excluding quest NPCs that have special scripts that disallow it from happening.\n\n<CUSTOM104>2)<CUSTOM100> There is to be absolutely no exploiting. Heres a bit more detail onto what is specifically prohibited. There is to be no trap spamming, area transition camping, weapon swapping or bullet casting, etc. The punishment for offenses can be as extreme as an instant banning.\n\n<CUSTOM104>3)<CUSTOM100> There is to be no <CUSTOM104>OOC<CUSTOM100> comments in the game world. I'm serious about this, if you want to have a conversation - take it to a party channel or do it in tells. Corrections of errors or minor things are allowed, but the game world is for roleplay.\n\n<CUSTOM104>4)<CUSTOM100> There is to be zero metagaming. If you don't know what this, it means you aren't allowed to pass any in character information through <CUSTOM104>OOC<CUSTOM100> means. If you're found to be metagaming, you will be jailed on sight. If you must communicate across long distances to other players, roleplay it as though you were using a communicator device.\n\n<CUSTOM104>5)<CUSTOM100> If you absolutely must indulge in adult roleplay, please keep it limited to the private rooms provided. This also means that you must ask or know prior to engaging that they will <CUSTOM104>OOCly<CUSTOM100> consent before you begin.\n\n<CUSTOM104>6)<CUSTOM100> You are allowed to attack a member of the opposing faction whilst they're in the dungeons or exploring any sort of other content. There is just one exception here, if they are not out in a specifically <CUSTOM104>PvP<CUSTOM100>-oriented area, then you must approach them with roleplay first, to allow them a chance to react or respond before any sort of <CUSTOM104>PvP<CUSTOM100> begins. You are not allowed to just randomly attack anybody inside of the cities, dungeons or scenic areas. Space and Conquerable Planets (Iridonia, Bespin, Corellia) are considered <CUSTOM104>PvP<CUSTOM100> areas.\n\n<CUSTOM104>7)<CUSTOM100> You are not allowed to use the 'shout' function. This is really annoying when done constantly, especially when it creates conversations between multiple parties. You may see a DM shout an announcement, or notify you of a situation and that is okay.\n\n<CUSTOM104>8)<CUSTOM100> This is a golden rule: DO NOT ASK DMs ABOUT BECOMING A JEDI/SITH. Do not ask them if you can be one, do not even ask them how to do it - goto the forums and look at the guide section for a thread that explains the process. You can find it by following this link. (http://rotr.darkbb.com/player-guides-information-f10/how-do-i-become-a-jedi-sith-t96.htm)\n\n<CUSTOM104>I know this probably sounds a little harsh, but hopefully by following these rules, everybody can enjoy themselves a little more and the server will stay a pleasant place to roleplay on.<CUSTOM100>"
                }
              }
            }
          ]
        },
        "Name": {
          "type": "cexolocstring",
          "value": {
            "0": "<CUSTOM104>Server Rules<CUSTOM100>"
          }
        },
        "Picture": {
          "type": "word",
          "value": 65535
        },
        "Priority": {
          "type": "dword",
          "value": 0
        },
        "Tag": {
          "type": "cexostring",
          "value": "Rules"
        },
        "XP": {
          "type": "dword",
          "value": 0
        }
      },
      {
        "__struct_id": 3,
        "Comment": {
          "type": "cexostring",
          "value": ""
        },
        "EntryList": {
          "type": "list",
          "value": [
            {
              "__struct_id": 0,
              "End": {
                "type": "word",
                "value": 1
              },
              "ID": {
                "type": "dword",
                "value": 1
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "<CUSTOM104>Note: If they do not have their player accounts on here, they do not wish to be disturbed whilst on their characters. Even then, it must be extremely important, otherwise, please respect their privacy and give them some time to be alone.<CUSTOM100>\n\n<CUSTOM101>Forums - http://rotr.darkbb.com/<CUSTOM100>\n\n<CUSTOM104>Co-Owner, Creator, Writer, Builder - <CUSTOM114>MysteriousDarkness\n<CUSTOM104>Co-Owner, Modeller, 2DA/TLK, Host - <CUSTOM100>QuixSilver\n<CUSTOM104>Scripter, Builder - <CUSTOM100>Pugnius\n<CUSTOM104>Head DM - <CUSTOM100>CreepShow"
                }
              }
            }
          ]
        },
        "Name": {
          "type": "cexolocstring",
          "value": {
            "0": "<CUSTOM104>Who do I contact?<CUSTOM100>"
          }
        },
        "Picture": {
          "type": "word",
          "value": 65535
        },
        "Priority": {
          "type": "dword",
          "value": 1
        },
        "Tag": {
          "type": "cexostring",
          "value": "Who do I contact?"
        },
        "XP": {
          "type": "dword",
          "value": 0
        }
      },
      {
        "__struct_id": 4,
        "Comment": {
          "type": "cexostring",
          "value": ""
        },
        "EntryList": {
          "type": "list",
          "value": [
            {
              "__struct_id": 0,
              "End": {
                "type": "word",
                "value": 0
              },
              "ID": {
                "type": "dword",
                "value": 1
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "A farmer by the name of Dakkar in Mos Eisley has asked me to find his missing droid. It was last seen heading towards Beggar's Canyon."
                }
              }
            },
            {
              "__struct_id": 1,
              "End": {
                "type": "word",
                "value": 0
              },
              "ID": {
                "type": "dword",
                "value": 2
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "I have found the remains of a droid belonging to Farmer Dakkar. It appears that it was destroyed by Tusken Raiders."
                }
              }
            },
            {
              "__struct_id": 2,
              "End": {
                "type": "word",
                "value": 1
              },
              "ID": {
                "type": "dword",
                "value": 3
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "I told the farmer about his droid's fate. He has told me that he will pay me for bringing him full buckets of bantha milk."
                }
              }
            }
          ]
        },
        "Name": {
          "type": "cexolocstring",
          "value": {
            "0": "Desert Farmer"
          }
        },
        "Picture": {
          "type": "word",
          "value": 65535
        },
        "Priority": {
          "type": "dword",
          "value": 4
        },
        "Tag": {
          "type": "cexostring",
          "value": "DesertFarmer"
        },
        "XP": {
          "type": "dword",
          "value": 0
        }
      },
      {
        "__struct_id": 5,
        "Comment": {
          "type": "cexostring",
          "value": ""
        },
        "EntryList": {
          "type": "list",
          "value": [
            {
              "__struct_id": 0,
              "End": {
                "type": "word",
                "value": 0
              },
              "ID": {
                "type": "dword",
                "value": 1
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "There has been a sickness going around the rebel base that is thought to be caused by something in the jungle. A doctor left the base to find a vaccine, but has not been seen in days."
                }
              }
            },
            {
              "__struct_id": 1,
              "End": {
                "type": "word",
                "value": 0
              },
              "ID": {
                "type": "dword",
                "value": 2
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "I have found the remains of the doctor looking for a vaccine for a sickness in the rebel base. I was also able to obtain the vaccine that he was working on beefore he died.I should bring this to Dr. Ragal."
                }
              }
            },
            {
              "__struct_id": 2,
              "End": {
                "type": "word",
                "value": 1
              },
              "ID": {
                "type": "dword",
                "value": 3
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "Dr. Ragal was able to coplete the vaccine and prevent further spread of the sickness."
                }
              }
            }
          ]
        },
        "Name": {
          "type": "cexolocstring",
          "value": {
            "0": "Jungle Fever"
          }
        },
        "Picture": {
          "type": "word",
          "value": 65535
        },
        "Priority": {
          "type": "dword",
          "value": 4
        },
        "Tag": {
          "type": "cexostring",
          "value": "JungleFever"
        },
        "XP": {
          "type": "dword",
          "value": 0
        }
      },
      {
        "__struct_id": 6,
        "Comment": {
          "type": "cexostring",
          "value": ""
        },
        "EntryList": {
          "type": "list",
          "value": [
            {
              "__struct_id": 0,
              "End": {
                "type": "word",
                "value": 0
              },
              "ID": {
                "type": "dword",
                "value": 1
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "Any archaeologist on Korriban told me about an artifact that he left at his campsite when he fled from creatures now in the valley where he was. He has asked me to retreive it for him."
                }
              }
            },
            {
              "__struct_id": 1,
              "End": {
                "type": "word",
                "value": 0
              },
              "ID": {
                "type": "dword",
                "value": 2
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "I have found an artifact at the camp site in the Valley of the Dark Lords, on Korriban. I should return it to the archaeologist."
                }
              }
            },
            {
              "__struct_id": 2,
              "End": {
                "type": "word",
                "value": 1
              },
              "ID": {
                "type": "dword",
                "value": 3
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "I have returned the artifact to the archaeologist. He has offered to buy anymore artifacts I find scattered across the galaxy."
                }
              }
            }
          ]
        },
        "Name": {
          "type": "cexolocstring",
          "value": {
            "0": "Lost and Found"
          }
        },
        "Picture": {
          "type": "word",
          "value": 65535
        },
        "Priority": {
          "type": "dword",
          "value": 4
        },
        "Tag": {
          "type": "cexostring",
          "value": "LostandFound"
        },
        "XP": {
          "type": "dword",
          "value": 0
        }
      },
      {
        "__struct_id": 7,
        "Comment": {
          "type": "cexostring",
          "value": ""
        },
        "EntryList": {
          "type": "list",
          "value": [
            {
              "__struct_id": 0,
              "End": {
                "type": "word",
                "value": 0
              },
              "ID": {
                "type": "dword",
                "value": 1
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "I met a Rodian named Reema in a cantina on Coruscant. He has asked me to sort out a problem he has with a Gran who is waiting for him on Iridonia. I am to pretend that I am Reema in order to delay paying back a loan for a few days while the Reema gets the money together."
                }
              }
            },
            {
              "__struct_id": 1,
              "End": {
                "type": "word",
                "value": 0
              },
              "ID": {
                "type": "dword",
                "value": 2
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "Reema lied to me! It was a bounty hunter after him and he sent me in his place."
                }
              }
            },
            {
              "__struct_id": 2,
              "End": {
                "type": "word",
                "value": 1
              },
              "ID": {
                "type": "dword",
                "value": 3
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "Reema explained why he set me up and we have decided to part ways."
                }
              }
            }
          ]
        },
        "Name": {
          "type": "cexolocstring",
          "value": {
            "0": "Mistaken Identity"
          }
        },
        "Picture": {
          "type": "word",
          "value": 65535
        },
        "Priority": {
          "type": "dword",
          "value": 4
        },
        "Tag": {
          "type": "cexostring",
          "value": "MistakenIdentity"
        },
        "XP": {
          "type": "dword",
          "value": 0
        }
      },
      {
        "__struct_id": 8,
        "Comment": {
          "type": "cexostring",
          "value": ""
        },
        "EntryList": {
          "type": "list",
          "value": [
            {
              "__struct_id": 0,
              "End": {
                "type": "word",
                "value": 0
              },
              "ID": {
                "type": "dword",
                "value": 1
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "An old man at the Coruscant docking bay has asked me to retrieve an item of his from the clerk at the Diplomat Hotel."
                }
              }
            },
            {
              "__struct_id": 1,
              "End": {
                "type": "word",
                "value": 0
              },
              "ID": {
                "type": "dword",
                "value": 2
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "I have the old man's data pad. I should bring it back to him at the docking bay."
                }
              }
            },
            {
              "__struct_id": 2,
              "End": {
                "type": "word",
                "value": 1
              },
              "ID": {
                "type": "dword",
                "value": 3
              },
              "Text": {
                "type": "cexolocstring",
                "value": {
                  "0": "I have returned the old man's data pad."
                }
              }
            }
          ]
        },
        "Name": {
          "type": "cexolocstring",
          "value": {
            "0": "The Forgetful Man"
          }
        },
        "Picture": {
          "type": "word",
          "value": 65535
        },
        "Priority": {
          "type": "dword",
          "value": 4
        },
        "Tag": {
          "type": "cexostring",
          "value": "TheForgetfulMan"
        },
        "XP": {
          "type": "dword",
          "value": 0
        }
      }
    ]
  }
}
